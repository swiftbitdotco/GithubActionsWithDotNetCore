name: .NET

env:
  OUTPUT_PATH: ${{ github.workspace }}/.output
  TEST_OUTPUT_PATH: ${{ github.workspace }}/.testoutput
  DOTNET_VERSION: 5.0.x
  USE_SONARQUBE: 1

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup JDK 11 for SonarQube
        if: env.USE_SONARQUBE == 1
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Restore
        run: dotnet restore

      - name: SonarCloud Scan
        if: env.USE_SONARQUBE == 1
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        if: env.USE_SONARQUBE == 0
        run: dotnet build --no-restore --configuration release

      - name: Test & collect Code Coverage
        if: env.USE_SONARQUBE == 0
        run: dotnet test --collect:"Code Coverage" --logger:"trx;LogFileName=${{ env.TEST_OUTPUT_PATH }}/TestResults.xml"

      - name: Publish
        run: dotnet publish --configuration Release --output ${{ env.OUTPUT_PATH }}
